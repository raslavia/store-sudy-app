{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","FormInput","handleChange","label","otherProps","className","onChange","SignInContainer","styled","div","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setUserCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","alert","SignInAndSignUpPage"],"mappings":"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","file":"static/js/4.b834ce1b.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className='group'>\n    <input className='form-input' onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? 'shrink' : ''\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer,\n} from \"./sign-in.styles\";\n\n// import './sign-in.styles.scss';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          handleChange={handleChange}\n          value={email}\n          label='email'\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          value={password}\n          handleChange={handleChange}\n          label='password'\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type='submit'> Sign in </CustomButton>\n          <CustomButton\n            type='button'\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { email, password, displayName, confirmPassword } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUserCredentials({...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className='sign-up'>\n      <h2 className='title'>I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form className='sign-up-form' onSubmit={handleSubmit}>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={displayName}\n          onChange={handleChange}\n          label='Display Name'\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          label='Email'\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          onChange={handleChange}\n          label='Password'\n          required\n        />\n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          onChange={handleChange}\n          label='Confirm Password'\n          required\n        />\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React from 'react';\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport './sign-in-and-sign-up.styles.scss';\n\nconst SignInAndSignUpPage = () => (\n  <div className='sign-in-and-sign-up'>\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}