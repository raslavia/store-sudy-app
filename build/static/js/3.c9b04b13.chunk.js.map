{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","selectCollection","collectionUrlParam","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","onClick","inverted","CollectionPreview","title","items","className","toUpperCase","filter","idx","id","mapStateToProps","createStructuredSelector","otherCollectionProps","CollectionsOverviewContainer","compose","CollectionsOverview"],"mappings":"qHAAA,kHAEMA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAQ7DC,EAA6BP,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKU,cAGFC,EAA4BT,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,eAGFS,IAfU,SAAAC,GAAkB,OACzCX,YAAe,CAACD,IAAoB,SAAAE,GAAW,OAC7CA,EAAcA,EAAYU,GAAsB,U,oECTrCC,IAJK,SAAAC,GAAgB,OAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BACxE,OAAOD,EAAY,kBAAC,IAAD,MAAc,kBAACD,EAAqBE,M,g+CCFlD,IAAMC,EAA0BC,IAAOC,IAAV,KAgCvBC,EAAYF,YAAOG,IAAPH,CAAH,KAeTI,EAAkBJ,IAAOC,IAAV,KAMN,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,KAQzBM,EAAgBP,IAAOQ,KAAV,KAKbC,EAAiBT,IAAOQ,KAAV,KCvCZE,gBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EArBQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SAErB,OACE,kBAACN,EAAD,KACE,kBAACK,EAAD,CAAiBC,SAAUA,IAC3B,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBO,GAChB,kBAACL,EAAD,KAAiBM,IAEnB,kBAACb,EAAD,CAAWc,QAAS,kBAAMJ,EAAQC,IAAOI,UAAQ,GAAjD,oB,6JCHSC,G,MAbW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACxB,yBAAKC,UAAU,sBACb,wBAAIA,UAAU,SAASF,EAAMG,eAC7B,yBAAKD,UAAU,WACZD,EACEG,QAAO,SAACV,EAAMW,GAAP,OAAeA,EAAM,KAC5BpC,KAAI,SAAAyB,GAAI,OACP,kBAAC,IAAD,CAAgBxB,IAAKwB,EAAKY,GAAIZ,KAAMA,WCKxCa,G,MAAkBC,YAAyB,CAC/C3C,YAAaC,OAGAyB,cAAQgB,EAARhB,EAZa,SAAC,GAAD,IAAG1B,EAAH,EAAGA,YAAH,OAC1B,yBAAKqC,UAAU,wBACZrC,EAAYI,KAAI,gBAAGqC,EAAH,EAAGA,GAAOG,EAAV,6BACf,kBAAC,EAAD,eAAmBvC,IAAKoC,GAAQG,WCLhCF,EAAkBC,YAAyB,CAC/C9B,UAAWP,MAGPuC,EAA+BC,YACnCpB,YAAQgB,GACR/B,IAFmCmC,CAGnCC,GAEaF","file":"static/js/3.c9b04b13.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nconst selectCollection = collectionUrlParam =>\n  createSelector([selectCollections], collections =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n\nexport default selectCollection;\n","import React from \"react\";\n\nimport Spinner from \"../spinner/spinner.component\";\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer,\n} from \"./collection-item.styles\";\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n\n// import './collection-item.styles.scss';\n\n// const CollectionItem = ({ item, addItem }) => {\n//   const { name, price, imageUrl } = item;\n\n//   return (\n//     <div className='collection-item'>\n//       <div\n//         className='image'\n//         style={{\n//           backgroundImage: `url(${imageUrl})`\n//         }}\n//       />\n//       <div className='collection-footer'>\n//         <span className='name'>{name}</span>\n//         <span className='price'>{price}</span>\n//       </div>\n//       <CustomButton onClick={() => addItem(item)} inverted>\n//         Add to cart\n//       </CustomButton>\n//     </div>\n//   );\n// };\n","import React from 'react';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = ({ title, items }) => (\n  <div className='collection-preview'>\n    <h1 className='title'>{title.toUpperCase()}</h1>\n    <div className='preview'>\n      {items\n        .filter((item, idx) => idx < 4)\n        .map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </div>\n  </div>\n);\n\nexport default CollectionPreview;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport './collections-overview.styles.scss';\n\nconst CollectionsOverview = ({ collections }) => (\n  <div className='collections-overview'>\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} {...otherCollectionProps} />\n    ))}\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\n\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching,\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n"],"sourceRoot":""}